import streamlit as st

# 페이지 제목
st.title("🎯 MBTI 기반 직업 추천 웹앱")
st.markdown("당신의 MBTI 유형을 선택하면, 어울리는 직업과 간단한 설명을 드립니다! 💼✨")

# MBTI 선택
mbti_list = [
    "ISTJ", "ISFJ", "INFJ", "INTJ",
    "ISTP", "ISFP", "INFP", "INTP",
    "ESTP", "ESFP", "ENFP", "ENTP",
    "ESTJ", "ESFJ", "ENFJ", "ENTJ"
]

selected_mbti = st.selectbox("🧠 당신의 MBTI를 선택하세요:", mbti_list)

# MBTI별 추천 직업과 설명
mbti_jobs = {
    "ISTJ": {
        "설명": "신중하고 책임감이 강한 관리자형 🙇",
        "직업": [
            ("회계사", "숫자와 규칙에 강한 ISTJ에게 적합한 전문직 💰"),
            ("공무원", "체계적인 일 처리로 안정적인 직업에 적합 👮"),
            ("데이터 분석가", "데이터를 논리적으로 다루는 능력 탁월 📊")
        ]
    },
    "ENFP": {
        "설명": "열정적이고 창의적인 아이디어 뱅크형 💡",
        "직업": [
            ("마케터", "창의적인 아이디어로 사람들의 마음을 사로잡음 📣"),
            ("콘텐츠 크리에이터", "자신만의 스타일로 콘텐츠를 생산 🎥"),
            ("방송 작가", "다채로운 아이디어로 방송을 빛나게 함 ✍️")
        ]
    },
    "INTJ": {
        "설명": "전략적이고 독립적인 과학자형 🧠",
        "직업": [
            ("전략기획가", "미래를 설계하고 큰 그림을 그리는 데 강함 📈"),
            ("소프트웨어 엔지니어", "복잡한 구조를 논리적으로 해결 🧑‍💻"),
            ("과학자", "탐구심이 강하고 이론 정립에 관심 많음 🔬")
        ]
    },
    "ISFP": {
        "설명": "감성적이고 조용한 예술가형 🎨",
        "직업": [
            ("플로리스트", "자연과 감성을 담아내는 섬세한 직업 🌸"),
            ("요리사", "감각을 살린 섬세한 표현에 강점 🍳"),
            ("뷰티 아티스트", "아름다움을 손끝으로 표현 💅")
        ]
    },
    # 필요한 경우 여기에 다른 유형도 추가 가능
}

# 결과 출력
if selected_mbti:
    data = mbti_jobs.get(selected_mbti)

    if data:
        st.subheader(f"🔍 {selected_mbti} - {data['설명']}")
        st.markdown("**추천 직업:**"
